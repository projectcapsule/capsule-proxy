name: e2e

on:
  push:
    branches: [ "*" ]
    paths:
      - '.github/workflows/e2e.yaml'
      - 'e2e/**'
      - 'internal/**'
      - 'Dockerfile'
      - 'go.*'
      - 'main.go'
      - 'Makefile'
  pull_request:
    branches: [ "*" ]
    paths:
      - '.github/workflows/e2e.yaml'
      - 'e2e/**'
      - 'internal/**'
      - 'Dockerfile'
      - 'go.*'
      - 'main.go'
      - 'Makefile'

jobs:
  kind:
    name: Kubernetes
    strategy:
      fail-fast: false
      matrix:
        k8s-version: [ 'v1.16.15', 'v1.17.11', 'v1.18.8', 'v1.19.4', 'v1.20.7', 'v1.21.2', 'v1.22.0' ]
        capsule-proxy-mode: [ 'https', 'http' ]
        test-clients: [ 'kubectl', 'curl' ]
    runs-on: ubuntu-18.04
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: engineerd/setup-kind@v0.5.0
        with:
          skipClusterCreation: true
          version: v0.11.1
      - uses: azure/setup-helm@v1
        with:
          version: 3.3.4
      - name: Installing BATS
        run: sudo apt-get install -y bats
      - name: Installing jq
        run: sudo apt-get install -y jq        
      - name: e2e testing
        run: CLIENT_TEST=${{ matrix.test-clients }} CAPSULE_PROXY_MODE=${{ matrix.capsule-proxy-mode }} KIND_K8S_VERSION=${{ matrix.k8s-version }} make e2e
      - name: Dumping Capsule logs
        if: failure()
        run: kubectl -n capsule-system logs -l app.kubernetes.io/instance=capsule
      - name: Dumping Capsule Proxy logs
        if: failure()
        run: kubectl -n capsule-system logs -l app.kubernetes.io/instance=capsule-proxy
