{{- if and .Values.options.enableSSL .Values.options.generateCertificates -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-certgen"
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}-certgen"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      restartPolicy: Never
      containers:
      - name: post-install-job
        image: {{ include "capsule.jobs.certsFullyQualifiedDockerImage" $ }}
        imagePullPolicy: {{ .Values.jobs.certs.pullPolicy }}
        args:
            - create
            - --host={{ include "capsule-proxy.fullname" . }}.{{.Release.Namespace}}.svc,{{ include "capsule-proxy.fullname" . }}
            - --namespace=$(NAMESPACE)
            - --secret-name={{ include "capsule-proxy.fullname" . }}
            - --cert-name={{ .Values.options.SSLCertFileName }}
            - --key-name={{ .Values.options.SSLKeyFileName }}
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      serviceAccountName: {{ include "capsule-proxy.serviceAccountName" . }}
{{- end }}
